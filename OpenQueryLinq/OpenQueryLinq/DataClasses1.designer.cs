#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenQueryLinq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="esemkabakerysecond")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void Insertsellingheader(sellingheader instance);
    partial void Updatesellingheader(sellingheader instance);
    partial void Deletesellingheader(sellingheader instance);
    partial void Insertfood(food instance);
    partial void Updatefood(food instance);
    partial void Deletefood(food instance);
    partial void Insertincomingrawmaterialdetail(incomingrawmaterialdetail instance);
    partial void Updateincomingrawmaterialdetail(incomingrawmaterialdetail instance);
    partial void Deleteincomingrawmaterialdetail(incomingrawmaterialdetail instance);
    partial void Insertincomingrawmaterialheader(incomingrawmaterialheader instance);
    partial void Updateincomingrawmaterialheader(incomingrawmaterialheader instance);
    partial void Deleteincomingrawmaterialheader(incomingrawmaterialheader instance);
    partial void Insertproductiondetail(productiondetail instance);
    partial void Updateproductiondetail(productiondetail instance);
    partial void Deleteproductiondetail(productiondetail instance);
    partial void Insertproductionheader(productionheader instance);
    partial void Updateproductionheader(productionheader instance);
    partial void Deleteproductionheader(productionheader instance);
    partial void Insertrawmaterial(rawmaterial instance);
    partial void Updaterawmaterial(rawmaterial instance);
    partial void Deleterawmaterial(rawmaterial instance);
    partial void Insertrawmaterialintake(rawmaterialintake instance);
    partial void Updaterawmaterialintake(rawmaterialintake instance);
    partial void Deleterawmaterialintake(rawmaterialintake instance);
    partial void Insertrecipedetail(recipedetail instance);
    partial void Updaterecipedetail(recipedetail instance);
    partial void Deleterecipedetail(recipedetail instance);
    partial void Insertrecipeheader(recipeheader instance);
    partial void Updaterecipeheader(recipeheader instance);
    partial void Deleterecipeheader(recipeheader instance);
    partial void Insertsellingdetail(sellingdetail instance);
    partial void Updatesellingdetail(sellingdetail instance);
    partial void Deletesellingdetail(sellingdetail instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::OpenQueryLinq.Properties.Settings.Default.esemkabakerysecondConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<sellingheader> sellingheaders
		{
			get
			{
				return this.GetTable<sellingheader>();
			}
		}
		
		public System.Data.Linq.Table<food> foods
		{
			get
			{
				return this.GetTable<food>();
			}
		}
		
		public System.Data.Linq.Table<incomingrawmaterialdetail> incomingrawmaterialdetails
		{
			get
			{
				return this.GetTable<incomingrawmaterialdetail>();
			}
		}
		
		public System.Data.Linq.Table<incomingrawmaterialheader> incomingrawmaterialheaders
		{
			get
			{
				return this.GetTable<incomingrawmaterialheader>();
			}
		}
		
		public System.Data.Linq.Table<productiondetail> productiondetails
		{
			get
			{
				return this.GetTable<productiondetail>();
			}
		}
		
		public System.Data.Linq.Table<productionheader> productionheaders
		{
			get
			{
				return this.GetTable<productionheader>();
			}
		}
		
		public System.Data.Linq.Table<rawmaterial> rawmaterials
		{
			get
			{
				return this.GetTable<rawmaterial>();
			}
		}
		
		public System.Data.Linq.Table<rawmaterialintake> rawmaterialintakes
		{
			get
			{
				return this.GetTable<rawmaterialintake>();
			}
		}
		
		public System.Data.Linq.Table<recipedetail> recipedetails
		{
			get
			{
				return this.GetTable<recipedetail>();
			}
		}
		
		public System.Data.Linq.Table<recipeheader> recipeheaders
		{
			get
			{
				return this.GetTable<recipeheader>();
			}
		}
		
		public System.Data.Linq.Table<sellingdetail> sellingdetails
		{
			get
			{
				return this.GetTable<sellingdetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employeeid;
		
		private string _employeename;
		
		private string _password;
		
		private string _employeeaddress;
		
		private string _employeephone;
		
		private System.Nullable<char> _status;
		
		private string _email;
		
		private EntitySet<sellingheader> _sellingheaders;
		
		private EntitySet<incomingrawmaterialheader> _incomingrawmaterialheaders;
		
		private EntitySet<productionheader> _productionheaders;
		
		private EntitySet<rawmaterial> _rawmaterials;
		
		private EntitySet<recipeheader> _recipeheaders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemployeeidChanging(int value);
    partial void OnemployeeidChanged();
    partial void OnemployeenameChanging(string value);
    partial void OnemployeenameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemployeeaddressChanging(string value);
    partial void OnemployeeaddressChanged();
    partial void OnemployeephoneChanging(string value);
    partial void OnemployeephoneChanged();
    partial void OnstatusChanging(System.Nullable<char> value);
    partial void OnstatusChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public employee()
		{
			this._sellingheaders = new EntitySet<sellingheader>(new Action<sellingheader>(this.attach_sellingheaders), new Action<sellingheader>(this.detach_sellingheaders));
			this._incomingrawmaterialheaders = new EntitySet<incomingrawmaterialheader>(new Action<incomingrawmaterialheader>(this.attach_incomingrawmaterialheaders), new Action<incomingrawmaterialheader>(this.detach_incomingrawmaterialheaders));
			this._productionheaders = new EntitySet<productionheader>(new Action<productionheader>(this.attach_productionheaders), new Action<productionheader>(this.detach_productionheaders));
			this._rawmaterials = new EntitySet<rawmaterial>(new Action<rawmaterial>(this.attach_rawmaterials), new Action<rawmaterial>(this.detach_rawmaterials));
			this._recipeheaders = new EntitySet<recipeheader>(new Action<recipeheader>(this.attach_recipeheaders), new Action<recipeheader>(this.detach_recipeheaders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int employeeid
		{
			get
			{
				return this._employeeid;
			}
			set
			{
				if ((this._employeeid != value))
				{
					this.OnemployeeidChanging(value);
					this.SendPropertyChanging();
					this._employeeid = value;
					this.SendPropertyChanged("employeeid");
					this.OnemployeeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeename", DbType="VarChar(100)")]
		public string employeename
		{
			get
			{
				return this._employeename;
			}
			set
			{
				if ((this._employeename != value))
				{
					this.OnemployeenameChanging(value);
					this.SendPropertyChanging();
					this._employeename = value;
					this.SendPropertyChanged("employeename");
					this.OnemployeenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeaddress", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string employeeaddress
		{
			get
			{
				return this._employeeaddress;
			}
			set
			{
				if ((this._employeeaddress != value))
				{
					this.OnemployeeaddressChanging(value);
					this.SendPropertyChanging();
					this._employeeaddress = value;
					this.SendPropertyChanged("employeeaddress");
					this.OnemployeeaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeephone", DbType="VarChar(60)")]
		public string employeephone
		{
			get
			{
				return this._employeephone;
			}
			set
			{
				if ((this._employeephone != value))
				{
					this.OnemployeephoneChanging(value);
					this.SendPropertyChanging();
					this._employeephone = value;
					this.SendPropertyChanged("employeephone");
					this.OnemployeephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(1)")]
		public System.Nullable<char> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_sellingheader", Storage="_sellingheaders", ThisKey="employeeid", OtherKey="employeeid")]
		public EntitySet<sellingheader> sellingheaders
		{
			get
			{
				return this._sellingheaders;
			}
			set
			{
				this._sellingheaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_incomingrawmaterialheader", Storage="_incomingrawmaterialheaders", ThisKey="employeeid", OtherKey="employeeid")]
		public EntitySet<incomingrawmaterialheader> incomingrawmaterialheaders
		{
			get
			{
				return this._incomingrawmaterialheaders;
			}
			set
			{
				this._incomingrawmaterialheaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_productionheader", Storage="_productionheaders", ThisKey="employeeid", OtherKey="employeeid")]
		public EntitySet<productionheader> productionheaders
		{
			get
			{
				return this._productionheaders;
			}
			set
			{
				this._productionheaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_rawmaterial", Storage="_rawmaterials", ThisKey="employeeid", OtherKey="employeeid")]
		public EntitySet<rawmaterial> rawmaterials
		{
			get
			{
				return this._rawmaterials;
			}
			set
			{
				this._rawmaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_recipeheader", Storage="_recipeheaders", ThisKey="employeeid", OtherKey="employeeid")]
		public EntitySet<recipeheader> recipeheaders
		{
			get
			{
				return this._recipeheaders;
			}
			set
			{
				this._recipeheaders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sellingheaders(sellingheader entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_sellingheaders(sellingheader entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_incomingrawmaterialheaders(incomingrawmaterialheader entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_incomingrawmaterialheaders(incomingrawmaterialheader entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_productionheaders(productionheader entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_productionheaders(productionheader entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_rawmaterials(rawmaterial entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_rawmaterials(rawmaterial entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_recipeheaders(recipeheader entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_recipeheaders(recipeheader entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sellingheader")]
	public partial class sellingheader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sellingid;
		
		private System.Nullable<System.DateTime> _sellingdate;
		
		private System.Nullable<int> _discount;
		
		private System.Nullable<int> _employeeid;
		
		private EntitySet<sellingdetail> _sellingdetails;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsellingidChanging(int value);
    partial void OnsellingidChanged();
    partial void OnsellingdateChanging(System.Nullable<System.DateTime> value);
    partial void OnsellingdateChanged();
    partial void OndiscountChanging(System.Nullable<int> value);
    partial void OndiscountChanged();
    partial void OnemployeeidChanging(System.Nullable<int> value);
    partial void OnemployeeidChanged();
    #endregion
		
		public sellingheader()
		{
			this._sellingdetails = new EntitySet<sellingdetail>(new Action<sellingdetail>(this.attach_sellingdetails), new Action<sellingdetail>(this.detach_sellingdetails));
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellingid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sellingid
		{
			get
			{
				return this._sellingid;
			}
			set
			{
				if ((this._sellingid != value))
				{
					this.OnsellingidChanging(value);
					this.SendPropertyChanging();
					this._sellingid = value;
					this.SendPropertyChanged("sellingid");
					this.OnsellingidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellingdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> sellingdate
		{
			get
			{
				return this._sellingdate;
			}
			set
			{
				if ((this._sellingdate != value))
				{
					this.OnsellingdateChanging(value);
					this.SendPropertyChanging();
					this._sellingdate = value;
					this.SendPropertyChanged("sellingdate");
					this.OnsellingdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Int")]
		public System.Nullable<int> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeid", DbType="Int")]
		public System.Nullable<int> employeeid
		{
			get
			{
				return this._employeeid;
			}
			set
			{
				if ((this._employeeid != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeidChanging(value);
					this.SendPropertyChanging();
					this._employeeid = value;
					this.SendPropertyChanged("employeeid");
					this.OnemployeeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sellingheader_sellingdetail", Storage="_sellingdetails", ThisKey="sellingid", OtherKey="sellingid")]
		public EntitySet<sellingdetail> sellingdetails
		{
			get
			{
				return this._sellingdetails;
			}
			set
			{
				this._sellingdetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_sellingheader", Storage="_employee", ThisKey="employeeid", OtherKey="employeeid", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.sellingheaders.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.sellingheaders.Add(this);
						this._employeeid = value.employeeid;
					}
					else
					{
						this._employeeid = default(Nullable<int>);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sellingdetails(sellingdetail entity)
		{
			this.SendPropertyChanging();
			entity.sellingheader = this;
		}
		
		private void detach_sellingdetails(sellingdetail entity)
		{
			this.SendPropertyChanging();
			entity.sellingheader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.food")]
	public partial class food : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _foodid;
		
		private string _foodname;
		
		private string _description;
		
		private System.Nullable<int> _price;
		
		private System.Nullable<char> _status;
		
		private EntitySet<productiondetail> _productiondetails;
		
		private EntitySet<recipeheader> _recipeheaders;
		
		private EntitySet<sellingdetail> _sellingdetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfoodidChanging(int value);
    partial void OnfoodidChanged();
    partial void OnfoodnameChanging(string value);
    partial void OnfoodnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    partial void OnstatusChanging(System.Nullable<char> value);
    partial void OnstatusChanged();
    #endregion
		
		public food()
		{
			this._productiondetails = new EntitySet<productiondetail>(new Action<productiondetail>(this.attach_productiondetails), new Action<productiondetail>(this.detach_productiondetails));
			this._recipeheaders = new EntitySet<recipeheader>(new Action<recipeheader>(this.attach_recipeheaders), new Action<recipeheader>(this.detach_recipeheaders));
			this._sellingdetails = new EntitySet<sellingdetail>(new Action<sellingdetail>(this.attach_sellingdetails), new Action<sellingdetail>(this.detach_sellingdetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int foodid
		{
			get
			{
				return this._foodid;
			}
			set
			{
				if ((this._foodid != value))
				{
					this.OnfoodidChanging(value);
					this.SendPropertyChanging();
					this._foodid = value;
					this.SendPropertyChanged("foodid");
					this.OnfoodidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodname", DbType="VarChar(100)")]
		public string foodname
		{
			get
			{
				return this._foodname;
			}
			set
			{
				if ((this._foodname != value))
				{
					this.OnfoodnameChanging(value);
					this.SendPropertyChanging();
					this._foodname = value;
					this.SendPropertyChanged("foodname");
					this.OnfoodnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(1)")]
		public System.Nullable<char> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="food_productiondetail", Storage="_productiondetails", ThisKey="foodid", OtherKey="foodid")]
		public EntitySet<productiondetail> productiondetails
		{
			get
			{
				return this._productiondetails;
			}
			set
			{
				this._productiondetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="food_recipeheader", Storage="_recipeheaders", ThisKey="foodid", OtherKey="foodid")]
		public EntitySet<recipeheader> recipeheaders
		{
			get
			{
				return this._recipeheaders;
			}
			set
			{
				this._recipeheaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="food_sellingdetail", Storage="_sellingdetails", ThisKey="foodid", OtherKey="foodid")]
		public EntitySet<sellingdetail> sellingdetails
		{
			get
			{
				return this._sellingdetails;
			}
			set
			{
				this._sellingdetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_productiondetails(productiondetail entity)
		{
			this.SendPropertyChanging();
			entity.food = this;
		}
		
		private void detach_productiondetails(productiondetail entity)
		{
			this.SendPropertyChanging();
			entity.food = null;
		}
		
		private void attach_recipeheaders(recipeheader entity)
		{
			this.SendPropertyChanging();
			entity.food = this;
		}
		
		private void detach_recipeheaders(recipeheader entity)
		{
			this.SendPropertyChanging();
			entity.food = null;
		}
		
		private void attach_sellingdetails(sellingdetail entity)
		{
			this.SendPropertyChanging();
			entity.food = this;
		}
		
		private void detach_sellingdetails(sellingdetail entity)
		{
			this.SendPropertyChanging();
			entity.food = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.incomingrawmaterialdetail")]
	public partial class incomingrawmaterialdetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _incomingrawmaterialid;
		
		private int _rawmaterialid;
		
		private System.Nullable<int> _priceper100gram;
		
		private System.Nullable<System.DateTime> _bestbeforedate;
		
		private System.Nullable<int> _weightingram;
		
		private EntityRef<incomingrawmaterialheader> _incomingrawmaterialheader;
		
		private EntityRef<rawmaterial> _rawmaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnincomingrawmaterialidChanging(int value);
    partial void OnincomingrawmaterialidChanged();
    partial void OnrawmaterialidChanging(int value);
    partial void OnrawmaterialidChanged();
    partial void Onpriceper100gramChanging(System.Nullable<int> value);
    partial void Onpriceper100gramChanged();
    partial void OnbestbeforedateChanging(System.Nullable<System.DateTime> value);
    partial void OnbestbeforedateChanged();
    partial void OnweightingramChanging(System.Nullable<int> value);
    partial void OnweightingramChanged();
    #endregion
		
		public incomingrawmaterialdetail()
		{
			this._incomingrawmaterialheader = default(EntityRef<incomingrawmaterialheader>);
			this._rawmaterial = default(EntityRef<rawmaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incomingrawmaterialid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int incomingrawmaterialid
		{
			get
			{
				return this._incomingrawmaterialid;
			}
			set
			{
				if ((this._incomingrawmaterialid != value))
				{
					if (this._incomingrawmaterialheader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnincomingrawmaterialidChanging(value);
					this.SendPropertyChanging();
					this._incomingrawmaterialid = value;
					this.SendPropertyChanged("incomingrawmaterialid");
					this.OnincomingrawmaterialidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rawmaterialid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int rawmaterialid
		{
			get
			{
				return this._rawmaterialid;
			}
			set
			{
				if ((this._rawmaterialid != value))
				{
					if (this._rawmaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrawmaterialidChanging(value);
					this.SendPropertyChanging();
					this._rawmaterialid = value;
					this.SendPropertyChanged("rawmaterialid");
					this.OnrawmaterialidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceper100gram", DbType="Int")]
		public System.Nullable<int> priceper100gram
		{
			get
			{
				return this._priceper100gram;
			}
			set
			{
				if ((this._priceper100gram != value))
				{
					this.Onpriceper100gramChanging(value);
					this.SendPropertyChanging();
					this._priceper100gram = value;
					this.SendPropertyChanged("priceper100gram");
					this.Onpriceper100gramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bestbeforedate", DbType="DateTime")]
		public System.Nullable<System.DateTime> bestbeforedate
		{
			get
			{
				return this._bestbeforedate;
			}
			set
			{
				if ((this._bestbeforedate != value))
				{
					this.OnbestbeforedateChanging(value);
					this.SendPropertyChanging();
					this._bestbeforedate = value;
					this.SendPropertyChanged("bestbeforedate");
					this.OnbestbeforedateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weightingram", DbType="Int")]
		public System.Nullable<int> weightingram
		{
			get
			{
				return this._weightingram;
			}
			set
			{
				if ((this._weightingram != value))
				{
					this.OnweightingramChanging(value);
					this.SendPropertyChanging();
					this._weightingram = value;
					this.SendPropertyChanged("weightingram");
					this.OnweightingramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomingrawmaterialheader_incomingrawmaterialdetail", Storage="_incomingrawmaterialheader", ThisKey="incomingrawmaterialid", OtherKey="incomingrawmaterialid", IsForeignKey=true)]
		public incomingrawmaterialheader incomingrawmaterialheader
		{
			get
			{
				return this._incomingrawmaterialheader.Entity;
			}
			set
			{
				incomingrawmaterialheader previousValue = this._incomingrawmaterialheader.Entity;
				if (((previousValue != value) 
							|| (this._incomingrawmaterialheader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._incomingrawmaterialheader.Entity = null;
						previousValue.incomingrawmaterialdetails.Remove(this);
					}
					this._incomingrawmaterialheader.Entity = value;
					if ((value != null))
					{
						value.incomingrawmaterialdetails.Add(this);
						this._incomingrawmaterialid = value.incomingrawmaterialid;
					}
					else
					{
						this._incomingrawmaterialid = default(int);
					}
					this.SendPropertyChanged("incomingrawmaterialheader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rawmaterial_incomingrawmaterialdetail", Storage="_rawmaterial", ThisKey="rawmaterialid", OtherKey="rawmaterialid", IsForeignKey=true)]
		public rawmaterial rawmaterial
		{
			get
			{
				return this._rawmaterial.Entity;
			}
			set
			{
				rawmaterial previousValue = this._rawmaterial.Entity;
				if (((previousValue != value) 
							|| (this._rawmaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rawmaterial.Entity = null;
						previousValue.incomingrawmaterialdetails.Remove(this);
					}
					this._rawmaterial.Entity = value;
					if ((value != null))
					{
						value.incomingrawmaterialdetails.Add(this);
						this._rawmaterialid = value.rawmaterialid;
					}
					else
					{
						this._rawmaterialid = default(int);
					}
					this.SendPropertyChanged("rawmaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.incomingrawmaterialheader")]
	public partial class incomingrawmaterialheader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _incomingrawmaterialid;
		
		private System.Nullable<System.DateTime> _incomingdate;
		
		private System.Nullable<int> _employeeid;
		
		private string _description;
		
		private EntitySet<incomingrawmaterialdetail> _incomingrawmaterialdetails;
		
		private EntitySet<rawmaterialintake> _rawmaterialintakes;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnincomingrawmaterialidChanging(int value);
    partial void OnincomingrawmaterialidChanged();
    partial void OnincomingdateChanging(System.Nullable<System.DateTime> value);
    partial void OnincomingdateChanged();
    partial void OnemployeeidChanging(System.Nullable<int> value);
    partial void OnemployeeidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public incomingrawmaterialheader()
		{
			this._incomingrawmaterialdetails = new EntitySet<incomingrawmaterialdetail>(new Action<incomingrawmaterialdetail>(this.attach_incomingrawmaterialdetails), new Action<incomingrawmaterialdetail>(this.detach_incomingrawmaterialdetails));
			this._rawmaterialintakes = new EntitySet<rawmaterialintake>(new Action<rawmaterialintake>(this.attach_rawmaterialintakes), new Action<rawmaterialintake>(this.detach_rawmaterialintakes));
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incomingrawmaterialid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int incomingrawmaterialid
		{
			get
			{
				return this._incomingrawmaterialid;
			}
			set
			{
				if ((this._incomingrawmaterialid != value))
				{
					this.OnincomingrawmaterialidChanging(value);
					this.SendPropertyChanging();
					this._incomingrawmaterialid = value;
					this.SendPropertyChanged("incomingrawmaterialid");
					this.OnincomingrawmaterialidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incomingdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> incomingdate
		{
			get
			{
				return this._incomingdate;
			}
			set
			{
				if ((this._incomingdate != value))
				{
					this.OnincomingdateChanging(value);
					this.SendPropertyChanging();
					this._incomingdate = value;
					this.SendPropertyChanged("incomingdate");
					this.OnincomingdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeid", DbType="Int")]
		public System.Nullable<int> employeeid
		{
			get
			{
				return this._employeeid;
			}
			set
			{
				if ((this._employeeid != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeidChanging(value);
					this.SendPropertyChanging();
					this._employeeid = value;
					this.SendPropertyChanged("employeeid");
					this.OnemployeeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomingrawmaterialheader_incomingrawmaterialdetail", Storage="_incomingrawmaterialdetails", ThisKey="incomingrawmaterialid", OtherKey="incomingrawmaterialid")]
		public EntitySet<incomingrawmaterialdetail> incomingrawmaterialdetails
		{
			get
			{
				return this._incomingrawmaterialdetails;
			}
			set
			{
				this._incomingrawmaterialdetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomingrawmaterialheader_rawmaterialintake", Storage="_rawmaterialintakes", ThisKey="incomingrawmaterialid", OtherKey="incomingrawmaterialid")]
		public EntitySet<rawmaterialintake> rawmaterialintakes
		{
			get
			{
				return this._rawmaterialintakes;
			}
			set
			{
				this._rawmaterialintakes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_incomingrawmaterialheader", Storage="_employee", ThisKey="employeeid", OtherKey="employeeid", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.incomingrawmaterialheaders.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.incomingrawmaterialheaders.Add(this);
						this._employeeid = value.employeeid;
					}
					else
					{
						this._employeeid = default(Nullable<int>);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_incomingrawmaterialdetails(incomingrawmaterialdetail entity)
		{
			this.SendPropertyChanging();
			entity.incomingrawmaterialheader = this;
		}
		
		private void detach_incomingrawmaterialdetails(incomingrawmaterialdetail entity)
		{
			this.SendPropertyChanging();
			entity.incomingrawmaterialheader = null;
		}
		
		private void attach_rawmaterialintakes(rawmaterialintake entity)
		{
			this.SendPropertyChanging();
			entity.incomingrawmaterialheader = this;
		}
		
		private void detach_rawmaterialintakes(rawmaterialintake entity)
		{
			this.SendPropertyChanging();
			entity.incomingrawmaterialheader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.productiondetail")]
	public partial class productiondetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productionid;
		
		private int _batchnumber;
		
		private int _foodid;
		
		private System.Nullable<int> _productionoutputqty;
		
		private System.Nullable<System.DateTime> _expireddate;
		
		private EntityRef<food> _food;
		
		private EntityRef<productionheader> _productionheader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductionidChanging(int value);
    partial void OnproductionidChanged();
    partial void OnbatchnumberChanging(int value);
    partial void OnbatchnumberChanged();
    partial void OnfoodidChanging(int value);
    partial void OnfoodidChanged();
    partial void OnproductionoutputqtyChanging(System.Nullable<int> value);
    partial void OnproductionoutputqtyChanged();
    partial void OnexpireddateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpireddateChanged();
    #endregion
		
		public productiondetail()
		{
			this._food = default(EntityRef<food>);
			this._productionheader = default(EntityRef<productionheader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productionid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productionid
		{
			get
			{
				return this._productionid;
			}
			set
			{
				if ((this._productionid != value))
				{
					if (this._productionheader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductionidChanging(value);
					this.SendPropertyChanging();
					this._productionid = value;
					this.SendPropertyChanged("productionid");
					this.OnproductionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchnumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int batchnumber
		{
			get
			{
				return this._batchnumber;
			}
			set
			{
				if ((this._batchnumber != value))
				{
					this.OnbatchnumberChanging(value);
					this.SendPropertyChanging();
					this._batchnumber = value;
					this.SendPropertyChanged("batchnumber");
					this.OnbatchnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int foodid
		{
			get
			{
				return this._foodid;
			}
			set
			{
				if ((this._foodid != value))
				{
					if (this._food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfoodidChanging(value);
					this.SendPropertyChanging();
					this._foodid = value;
					this.SendPropertyChanged("foodid");
					this.OnfoodidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productionoutputqty", DbType="Int")]
		public System.Nullable<int> productionoutputqty
		{
			get
			{
				return this._productionoutputqty;
			}
			set
			{
				if ((this._productionoutputqty != value))
				{
					this.OnproductionoutputqtyChanging(value);
					this.SendPropertyChanging();
					this._productionoutputqty = value;
					this.SendPropertyChanged("productionoutputqty");
					this.OnproductionoutputqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expireddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> expireddate
		{
			get
			{
				return this._expireddate;
			}
			set
			{
				if ((this._expireddate != value))
				{
					this.OnexpireddateChanging(value);
					this.SendPropertyChanging();
					this._expireddate = value;
					this.SendPropertyChanged("expireddate");
					this.OnexpireddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="food_productiondetail", Storage="_food", ThisKey="foodid", OtherKey="foodid", IsForeignKey=true)]
		public food food
		{
			get
			{
				return this._food.Entity;
			}
			set
			{
				food previousValue = this._food.Entity;
				if (((previousValue != value) 
							|| (this._food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._food.Entity = null;
						previousValue.productiondetails.Remove(this);
					}
					this._food.Entity = value;
					if ((value != null))
					{
						value.productiondetails.Add(this);
						this._foodid = value.foodid;
					}
					else
					{
						this._foodid = default(int);
					}
					this.SendPropertyChanged("food");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="productionheader_productiondetail", Storage="_productionheader", ThisKey="productionid", OtherKey="productionid", IsForeignKey=true)]
		public productionheader productionheader
		{
			get
			{
				return this._productionheader.Entity;
			}
			set
			{
				productionheader previousValue = this._productionheader.Entity;
				if (((previousValue != value) 
							|| (this._productionheader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._productionheader.Entity = null;
						previousValue.productiondetails.Remove(this);
					}
					this._productionheader.Entity = value;
					if ((value != null))
					{
						value.productiondetails.Add(this);
						this._productionid = value.productionid;
					}
					else
					{
						this._productionid = default(int);
					}
					this.SendPropertyChanged("productionheader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.productionheader")]
	public partial class productionheader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productionid;
		
		private System.Nullable<System.DateTime> _productiondate;
		
		private string _description;
		
		private System.Nullable<int> _employeeid;
		
		private System.Nullable<char> _status;
		
		private EntitySet<productiondetail> _productiondetails;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductionidChanging(int value);
    partial void OnproductionidChanged();
    partial void OnproductiondateChanging(System.Nullable<System.DateTime> value);
    partial void OnproductiondateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnemployeeidChanging(System.Nullable<int> value);
    partial void OnemployeeidChanged();
    partial void OnstatusChanging(System.Nullable<char> value);
    partial void OnstatusChanged();
    #endregion
		
		public productionheader()
		{
			this._productiondetails = new EntitySet<productiondetail>(new Action<productiondetail>(this.attach_productiondetails), new Action<productiondetail>(this.detach_productiondetails));
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productionid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int productionid
		{
			get
			{
				return this._productionid;
			}
			set
			{
				if ((this._productionid != value))
				{
					this.OnproductionidChanging(value);
					this.SendPropertyChanging();
					this._productionid = value;
					this.SendPropertyChanged("productionid");
					this.OnproductionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productiondate", DbType="DateTime")]
		public System.Nullable<System.DateTime> productiondate
		{
			get
			{
				return this._productiondate;
			}
			set
			{
				if ((this._productiondate != value))
				{
					this.OnproductiondateChanging(value);
					this.SendPropertyChanging();
					this._productiondate = value;
					this.SendPropertyChanged("productiondate");
					this.OnproductiondateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeid", DbType="Int")]
		public System.Nullable<int> employeeid
		{
			get
			{
				return this._employeeid;
			}
			set
			{
				if ((this._employeeid != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeidChanging(value);
					this.SendPropertyChanging();
					this._employeeid = value;
					this.SendPropertyChanged("employeeid");
					this.OnemployeeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(1)")]
		public System.Nullable<char> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="productionheader_productiondetail", Storage="_productiondetails", ThisKey="productionid", OtherKey="productionid")]
		public EntitySet<productiondetail> productiondetails
		{
			get
			{
				return this._productiondetails;
			}
			set
			{
				this._productiondetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_productionheader", Storage="_employee", ThisKey="employeeid", OtherKey="employeeid", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.productionheaders.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.productionheaders.Add(this);
						this._employeeid = value.employeeid;
					}
					else
					{
						this._employeeid = default(Nullable<int>);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_productiondetails(productiondetail entity)
		{
			this.SendPropertyChanging();
			entity.productionheader = this;
		}
		
		private void detach_productiondetails(productiondetail entity)
		{
			this.SendPropertyChanging();
			entity.productionheader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rawmaterial")]
	public partial class rawmaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rawmaterialid;
		
		private string _rawmaterialname;
		
		private string _description;
		
		private System.Nullable<int> _employeeid;
		
		private System.Nullable<System.DateTime> _inputeddate;
		
		private System.Nullable<char> _status;
		
		private EntitySet<incomingrawmaterialdetail> _incomingrawmaterialdetails;
		
		private EntitySet<rawmaterialintake> _rawmaterialintakes;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrawmaterialidChanging(int value);
    partial void OnrawmaterialidChanged();
    partial void OnrawmaterialnameChanging(string value);
    partial void OnrawmaterialnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnemployeeidChanging(System.Nullable<int> value);
    partial void OnemployeeidChanged();
    partial void OninputeddateChanging(System.Nullable<System.DateTime> value);
    partial void OninputeddateChanged();
    partial void OnstatusChanging(System.Nullable<char> value);
    partial void OnstatusChanged();
    #endregion
		
		public rawmaterial()
		{
			this._incomingrawmaterialdetails = new EntitySet<incomingrawmaterialdetail>(new Action<incomingrawmaterialdetail>(this.attach_incomingrawmaterialdetails), new Action<incomingrawmaterialdetail>(this.detach_incomingrawmaterialdetails));
			this._rawmaterialintakes = new EntitySet<rawmaterialintake>(new Action<rawmaterialintake>(this.attach_rawmaterialintakes), new Action<rawmaterialintake>(this.detach_rawmaterialintakes));
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rawmaterialid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int rawmaterialid
		{
			get
			{
				return this._rawmaterialid;
			}
			set
			{
				if ((this._rawmaterialid != value))
				{
					this.OnrawmaterialidChanging(value);
					this.SendPropertyChanging();
					this._rawmaterialid = value;
					this.SendPropertyChanged("rawmaterialid");
					this.OnrawmaterialidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rawmaterialname", DbType="VarChar(100)")]
		public string rawmaterialname
		{
			get
			{
				return this._rawmaterialname;
			}
			set
			{
				if ((this._rawmaterialname != value))
				{
					this.OnrawmaterialnameChanging(value);
					this.SendPropertyChanging();
					this._rawmaterialname = value;
					this.SendPropertyChanged("rawmaterialname");
					this.OnrawmaterialnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeid", DbType="Int")]
		public System.Nullable<int> employeeid
		{
			get
			{
				return this._employeeid;
			}
			set
			{
				if ((this._employeeid != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeidChanging(value);
					this.SendPropertyChanging();
					this._employeeid = value;
					this.SendPropertyChanged("employeeid");
					this.OnemployeeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inputeddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputeddate
		{
			get
			{
				return this._inputeddate;
			}
			set
			{
				if ((this._inputeddate != value))
				{
					this.OninputeddateChanging(value);
					this.SendPropertyChanging();
					this._inputeddate = value;
					this.SendPropertyChanged("inputeddate");
					this.OninputeddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(1)")]
		public System.Nullable<char> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rawmaterial_incomingrawmaterialdetail", Storage="_incomingrawmaterialdetails", ThisKey="rawmaterialid", OtherKey="rawmaterialid")]
		public EntitySet<incomingrawmaterialdetail> incomingrawmaterialdetails
		{
			get
			{
				return this._incomingrawmaterialdetails;
			}
			set
			{
				this._incomingrawmaterialdetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rawmaterial_rawmaterialintake", Storage="_rawmaterialintakes", ThisKey="rawmaterialid", OtherKey="rawmaterialid")]
		public EntitySet<rawmaterialintake> rawmaterialintakes
		{
			get
			{
				return this._rawmaterialintakes;
			}
			set
			{
				this._rawmaterialintakes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_rawmaterial", Storage="_employee", ThisKey="employeeid", OtherKey="employeeid", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.rawmaterials.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.rawmaterials.Add(this);
						this._employeeid = value.employeeid;
					}
					else
					{
						this._employeeid = default(Nullable<int>);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_incomingrawmaterialdetails(incomingrawmaterialdetail entity)
		{
			this.SendPropertyChanging();
			entity.rawmaterial = this;
		}
		
		private void detach_incomingrawmaterialdetails(incomingrawmaterialdetail entity)
		{
			this.SendPropertyChanging();
			entity.rawmaterial = null;
		}
		
		private void attach_rawmaterialintakes(rawmaterialintake entity)
		{
			this.SendPropertyChanging();
			entity.rawmaterial = this;
		}
		
		private void detach_rawmaterialintakes(rawmaterialintake entity)
		{
			this.SendPropertyChanging();
			entity.rawmaterial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rawmaterialintake")]
	public partial class rawmaterialintake : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _batchnumber;
		
		private int _rawmaterialid;
		
		private int _incomingrawmaterialid;
		
		private System.Nullable<int> _weightingram;
		
		private EntityRef<incomingrawmaterialheader> _incomingrawmaterialheader;
		
		private EntityRef<rawmaterial> _rawmaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbatchnumberChanging(int value);
    partial void OnbatchnumberChanged();
    partial void OnrawmaterialidChanging(int value);
    partial void OnrawmaterialidChanged();
    partial void OnincomingrawmaterialidChanging(int value);
    partial void OnincomingrawmaterialidChanged();
    partial void OnweightingramChanging(System.Nullable<int> value);
    partial void OnweightingramChanged();
    #endregion
		
		public rawmaterialintake()
		{
			this._incomingrawmaterialheader = default(EntityRef<incomingrawmaterialheader>);
			this._rawmaterial = default(EntityRef<rawmaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchnumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int batchnumber
		{
			get
			{
				return this._batchnumber;
			}
			set
			{
				if ((this._batchnumber != value))
				{
					this.OnbatchnumberChanging(value);
					this.SendPropertyChanging();
					this._batchnumber = value;
					this.SendPropertyChanged("batchnumber");
					this.OnbatchnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rawmaterialid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int rawmaterialid
		{
			get
			{
				return this._rawmaterialid;
			}
			set
			{
				if ((this._rawmaterialid != value))
				{
					if (this._rawmaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrawmaterialidChanging(value);
					this.SendPropertyChanging();
					this._rawmaterialid = value;
					this.SendPropertyChanged("rawmaterialid");
					this.OnrawmaterialidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incomingrawmaterialid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int incomingrawmaterialid
		{
			get
			{
				return this._incomingrawmaterialid;
			}
			set
			{
				if ((this._incomingrawmaterialid != value))
				{
					if (this._incomingrawmaterialheader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnincomingrawmaterialidChanging(value);
					this.SendPropertyChanging();
					this._incomingrawmaterialid = value;
					this.SendPropertyChanged("incomingrawmaterialid");
					this.OnincomingrawmaterialidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weightingram", DbType="Int")]
		public System.Nullable<int> weightingram
		{
			get
			{
				return this._weightingram;
			}
			set
			{
				if ((this._weightingram != value))
				{
					this.OnweightingramChanging(value);
					this.SendPropertyChanging();
					this._weightingram = value;
					this.SendPropertyChanged("weightingram");
					this.OnweightingramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomingrawmaterialheader_rawmaterialintake", Storage="_incomingrawmaterialheader", ThisKey="incomingrawmaterialid", OtherKey="incomingrawmaterialid", IsForeignKey=true)]
		public incomingrawmaterialheader incomingrawmaterialheader
		{
			get
			{
				return this._incomingrawmaterialheader.Entity;
			}
			set
			{
				incomingrawmaterialheader previousValue = this._incomingrawmaterialheader.Entity;
				if (((previousValue != value) 
							|| (this._incomingrawmaterialheader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._incomingrawmaterialheader.Entity = null;
						previousValue.rawmaterialintakes.Remove(this);
					}
					this._incomingrawmaterialheader.Entity = value;
					if ((value != null))
					{
						value.rawmaterialintakes.Add(this);
						this._incomingrawmaterialid = value.incomingrawmaterialid;
					}
					else
					{
						this._incomingrawmaterialid = default(int);
					}
					this.SendPropertyChanged("incomingrawmaterialheader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rawmaterial_rawmaterialintake", Storage="_rawmaterial", ThisKey="rawmaterialid", OtherKey="rawmaterialid", IsForeignKey=true)]
		public rawmaterial rawmaterial
		{
			get
			{
				return this._rawmaterial.Entity;
			}
			set
			{
				rawmaterial previousValue = this._rawmaterial.Entity;
				if (((previousValue != value) 
							|| (this._rawmaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rawmaterial.Entity = null;
						previousValue.rawmaterialintakes.Remove(this);
					}
					this._rawmaterial.Entity = value;
					if ((value != null))
					{
						value.rawmaterialintakes.Add(this);
						this._rawmaterialid = value.rawmaterialid;
					}
					else
					{
						this._rawmaterialid = default(int);
					}
					this.SendPropertyChanged("rawmaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.recipedetail")]
	public partial class recipedetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _recipeid;
		
		private int _rawmaterialid;
		
		private System.Nullable<int> _weightingram;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrecipeidChanging(int value);
    partial void OnrecipeidChanged();
    partial void OnrawmaterialidChanging(int value);
    partial void OnrawmaterialidChanged();
    partial void OnweightingramChanging(System.Nullable<int> value);
    partial void OnweightingramChanged();
    #endregion
		
		public recipedetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recipeid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int recipeid
		{
			get
			{
				return this._recipeid;
			}
			set
			{
				if ((this._recipeid != value))
				{
					this.OnrecipeidChanging(value);
					this.SendPropertyChanging();
					this._recipeid = value;
					this.SendPropertyChanged("recipeid");
					this.OnrecipeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rawmaterialid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int rawmaterialid
		{
			get
			{
				return this._rawmaterialid;
			}
			set
			{
				if ((this._rawmaterialid != value))
				{
					this.OnrawmaterialidChanging(value);
					this.SendPropertyChanging();
					this._rawmaterialid = value;
					this.SendPropertyChanged("rawmaterialid");
					this.OnrawmaterialidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weightingram", DbType="Int")]
		public System.Nullable<int> weightingram
		{
			get
			{
				return this._weightingram;
			}
			set
			{
				if ((this._weightingram != value))
				{
					this.OnweightingramChanging(value);
					this.SendPropertyChanging();
					this._weightingram = value;
					this.SendPropertyChanged("weightingram");
					this.OnweightingramChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.recipeheader")]
	public partial class recipeheader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _recipeid;
		
		private System.Nullable<int> _foodid;
		
		private System.Nullable<int> _outputunitinpieces;
		
		private string _description;
		
		private System.Nullable<int> _employeeid;
		
		private System.Nullable<System.DateTime> _createddate;
		
		private System.Nullable<char> _status;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<food> _food;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrecipeidChanging(int value);
    partial void OnrecipeidChanged();
    partial void OnfoodidChanging(System.Nullable<int> value);
    partial void OnfoodidChanged();
    partial void OnoutputunitinpiecesChanging(System.Nullable<int> value);
    partial void OnoutputunitinpiecesChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnemployeeidChanging(System.Nullable<int> value);
    partial void OnemployeeidChanged();
    partial void OncreateddateChanging(System.Nullable<System.DateTime> value);
    partial void OncreateddateChanged();
    partial void OnstatusChanging(System.Nullable<char> value);
    partial void OnstatusChanged();
    #endregion
		
		public recipeheader()
		{
			this._employee = default(EntityRef<employee>);
			this._food = default(EntityRef<food>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recipeid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int recipeid
		{
			get
			{
				return this._recipeid;
			}
			set
			{
				if ((this._recipeid != value))
				{
					this.OnrecipeidChanging(value);
					this.SendPropertyChanging();
					this._recipeid = value;
					this.SendPropertyChanged("recipeid");
					this.OnrecipeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodid", DbType="Int")]
		public System.Nullable<int> foodid
		{
			get
			{
				return this._foodid;
			}
			set
			{
				if ((this._foodid != value))
				{
					if (this._food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfoodidChanging(value);
					this.SendPropertyChanging();
					this._foodid = value;
					this.SendPropertyChanged("foodid");
					this.OnfoodidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outputunitinpieces", DbType="Int")]
		public System.Nullable<int> outputunitinpieces
		{
			get
			{
				return this._outputunitinpieces;
			}
			set
			{
				if ((this._outputunitinpieces != value))
				{
					this.OnoutputunitinpiecesChanging(value);
					this.SendPropertyChanging();
					this._outputunitinpieces = value;
					this.SendPropertyChanged("outputunitinpieces");
					this.OnoutputunitinpiecesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeid", DbType="Int")]
		public System.Nullable<int> employeeid
		{
			get
			{
				return this._employeeid;
			}
			set
			{
				if ((this._employeeid != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeidChanging(value);
					this.SendPropertyChanging();
					this._employeeid = value;
					this.SendPropertyChanged("employeeid");
					this.OnemployeeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> createddate
		{
			get
			{
				return this._createddate;
			}
			set
			{
				if ((this._createddate != value))
				{
					this.OncreateddateChanging(value);
					this.SendPropertyChanging();
					this._createddate = value;
					this.SendPropertyChanged("createddate");
					this.OncreateddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(1)")]
		public System.Nullable<char> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_recipeheader", Storage="_employee", ThisKey="employeeid", OtherKey="employeeid", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.recipeheaders.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.recipeheaders.Add(this);
						this._employeeid = value.employeeid;
					}
					else
					{
						this._employeeid = default(Nullable<int>);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="food_recipeheader", Storage="_food", ThisKey="foodid", OtherKey="foodid", IsForeignKey=true)]
		public food food
		{
			get
			{
				return this._food.Entity;
			}
			set
			{
				food previousValue = this._food.Entity;
				if (((previousValue != value) 
							|| (this._food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._food.Entity = null;
						previousValue.recipeheaders.Remove(this);
					}
					this._food.Entity = value;
					if ((value != null))
					{
						value.recipeheaders.Add(this);
						this._foodid = value.foodid;
					}
					else
					{
						this._foodid = default(Nullable<int>);
					}
					this.SendPropertyChanged("food");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sellingdetail")]
	public partial class sellingdetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sellingid;
		
		private int _foodid;
		
		private int _batchnumber;
		
		private System.Nullable<int> _qty;
		
		private System.Nullable<int> _price;
		
		private EntityRef<food> _food;
		
		private EntityRef<sellingheader> _sellingheader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsellingidChanging(int value);
    partial void OnsellingidChanged();
    partial void OnfoodidChanging(int value);
    partial void OnfoodidChanged();
    partial void OnbatchnumberChanging(int value);
    partial void OnbatchnumberChanged();
    partial void OnqtyChanging(System.Nullable<int> value);
    partial void OnqtyChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    #endregion
		
		public sellingdetail()
		{
			this._food = default(EntityRef<food>);
			this._sellingheader = default(EntityRef<sellingheader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellingid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int sellingid
		{
			get
			{
				return this._sellingid;
			}
			set
			{
				if ((this._sellingid != value))
				{
					if (this._sellingheader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsellingidChanging(value);
					this.SendPropertyChanging();
					this._sellingid = value;
					this.SendPropertyChanged("sellingid");
					this.OnsellingidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int foodid
		{
			get
			{
				return this._foodid;
			}
			set
			{
				if ((this._foodid != value))
				{
					if (this._food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfoodidChanging(value);
					this.SendPropertyChanging();
					this._foodid = value;
					this.SendPropertyChanged("foodid");
					this.OnfoodidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchnumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int batchnumber
		{
			get
			{
				return this._batchnumber;
			}
			set
			{
				if ((this._batchnumber != value))
				{
					this.OnbatchnumberChanging(value);
					this.SendPropertyChanging();
					this._batchnumber = value;
					this.SendPropertyChanged("batchnumber");
					this.OnbatchnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int")]
		public System.Nullable<int> qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="food_sellingdetail", Storage="_food", ThisKey="foodid", OtherKey="foodid", IsForeignKey=true)]
		public food food
		{
			get
			{
				return this._food.Entity;
			}
			set
			{
				food previousValue = this._food.Entity;
				if (((previousValue != value) 
							|| (this._food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._food.Entity = null;
						previousValue.sellingdetails.Remove(this);
					}
					this._food.Entity = value;
					if ((value != null))
					{
						value.sellingdetails.Add(this);
						this._foodid = value.foodid;
					}
					else
					{
						this._foodid = default(int);
					}
					this.SendPropertyChanged("food");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sellingheader_sellingdetail", Storage="_sellingheader", ThisKey="sellingid", OtherKey="sellingid", IsForeignKey=true)]
		public sellingheader sellingheader
		{
			get
			{
				return this._sellingheader.Entity;
			}
			set
			{
				sellingheader previousValue = this._sellingheader.Entity;
				if (((previousValue != value) 
							|| (this._sellingheader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sellingheader.Entity = null;
						previousValue.sellingdetails.Remove(this);
					}
					this._sellingheader.Entity = value;
					if ((value != null))
					{
						value.sellingdetails.Add(this);
						this._sellingid = value.sellingid;
					}
					else
					{
						this._sellingid = default(int);
					}
					this.SendPropertyChanged("sellingheader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
