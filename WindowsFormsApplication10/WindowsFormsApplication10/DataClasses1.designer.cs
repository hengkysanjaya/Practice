#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication10
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="session4")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSurvey(Survey instance);
    partial void UpdateSurvey(Survey instance);
    partial void DeleteSurvey(Survey instance);
    partial void InsertDetailSurvey(DetailSurvey instance);
    partial void UpdateDetailSurvey(DetailSurvey instance);
    partial void DeleteDetailSurvey(DetailSurvey instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    partial void InsertRating(Rating instance);
    partial void UpdateRating(Rating instance);
    partial void DeleteRating(Rating instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WindowsFormsApplication10.Properties.Settings.Default.session4ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Survey> Surveys
		{
			get
			{
				return this.GetTable<Survey>();
			}
		}
		
		public System.Data.Linq.Table<DetailSurvey> DetailSurveys
		{
			get
			{
				return this.GetTable<DetailSurvey>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
		
		public System.Data.Linq.Table<Rating> Ratings
		{
			get
			{
				return this.GetTable<Rating>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getData")]
		public ISingleResult<getDataResult> getData()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<getDataResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Survey")]
	public partial class Survey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SurveyId;
		
		private string _Departure;
		
		private string _Arrival;
		
		private string _Age;
		
		private string _Gender;
		
		private string _CabinType;
		
		private System.DateTime _SurveyDate;
		
		private EntitySet<DetailSurvey> _DetailSurveys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSurveyIdChanging(int value);
    partial void OnSurveyIdChanged();
    partial void OnDepartureChanging(string value);
    partial void OnDepartureChanged();
    partial void OnArrivalChanging(string value);
    partial void OnArrivalChanged();
    partial void OnAgeChanging(string value);
    partial void OnAgeChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnCabinTypeChanging(string value);
    partial void OnCabinTypeChanged();
    partial void OnSurveyDateChanging(System.DateTime value);
    partial void OnSurveyDateChanged();
    #endregion
		
		public Survey()
		{
			this._DetailSurveys = new EntitySet<DetailSurvey>(new Action<DetailSurvey>(this.attach_DetailSurveys), new Action<DetailSurvey>(this.detach_DetailSurveys));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SurveyId
		{
			get
			{
				return this._SurveyId;
			}
			set
			{
				if ((this._SurveyId != value))
				{
					this.OnSurveyIdChanging(value);
					this.SendPropertyChanging();
					this._SurveyId = value;
					this.SendPropertyChanged("SurveyId");
					this.OnSurveyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departure", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Departure
		{
			get
			{
				return this._Departure;
			}
			set
			{
				if ((this._Departure != value))
				{
					this.OnDepartureChanging(value);
					this.SendPropertyChanging();
					this._Departure = value;
					this.SendPropertyChanged("Departure");
					this.OnDepartureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arrival", DbType="VarChar(510) NOT NULL", CanBeNull=false)]
		public string Arrival
		{
			get
			{
				return this._Arrival;
			}
			set
			{
				if ((this._Arrival != value))
				{
					this.OnArrivalChanging(value);
					this.SendPropertyChanging();
					this._Arrival = value;
					this.SendPropertyChanged("Arrival");
					this.OnArrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinType", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string CabinType
		{
			get
			{
				return this._CabinType;
			}
			set
			{
				if ((this._CabinType != value))
				{
					this.OnCabinTypeChanging(value);
					this.SendPropertyChanging();
					this._CabinType = value;
					this.SendPropertyChanged("CabinType");
					this.OnCabinTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyDate", DbType="Date NOT NULL")]
		public System.DateTime SurveyDate
		{
			get
			{
				return this._SurveyDate;
			}
			set
			{
				if ((this._SurveyDate != value))
				{
					this.OnSurveyDateChanging(value);
					this.SendPropertyChanging();
					this._SurveyDate = value;
					this.SendPropertyChanged("SurveyDate");
					this.OnSurveyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_DetailSurvey", Storage="_DetailSurveys", ThisKey="SurveyId", OtherKey="SurveyId")]
		public EntitySet<DetailSurvey> DetailSurveys
		{
			get
			{
				return this._DetailSurveys;
			}
			set
			{
				this._DetailSurveys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailSurveys(DetailSurvey entity)
		{
			this.SendPropertyChanging();
			entity.Survey = this;
		}
		
		private void detach_DetailSurveys(DetailSurvey entity)
		{
			this.SendPropertyChanging();
			entity.Survey = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailSurvey")]
	public partial class DetailSurvey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DetailSurveyId;
		
		private int _SurveyId;
		
		private int _QuestionId;
		
		private int _RatingId;
		
		private EntityRef<Survey> _Survey;
		
		private EntityRef<Question> _Question;
		
		private EntityRef<Rating> _Rating;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetailSurveyIdChanging(int value);
    partial void OnDetailSurveyIdChanged();
    partial void OnSurveyIdChanging(int value);
    partial void OnSurveyIdChanged();
    partial void OnQuestionIdChanging(int value);
    partial void OnQuestionIdChanged();
    partial void OnRatingIdChanging(int value);
    partial void OnRatingIdChanged();
    #endregion
		
		public DetailSurvey()
		{
			this._Survey = default(EntityRef<Survey>);
			this._Question = default(EntityRef<Question>);
			this._Rating = default(EntityRef<Rating>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailSurveyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DetailSurveyId
		{
			get
			{
				return this._DetailSurveyId;
			}
			set
			{
				if ((this._DetailSurveyId != value))
				{
					this.OnDetailSurveyIdChanging(value);
					this.SendPropertyChanging();
					this._DetailSurveyId = value;
					this.SendPropertyChanged("DetailSurveyId");
					this.OnDetailSurveyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyId", DbType="Int NOT NULL")]
		public int SurveyId
		{
			get
			{
				return this._SurveyId;
			}
			set
			{
				if ((this._SurveyId != value))
				{
					if (this._Survey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSurveyIdChanging(value);
					this.SendPropertyChanging();
					this._SurveyId = value;
					this.SendPropertyChanged("SurveyId");
					this.OnSurveyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionId", DbType="Int NOT NULL")]
		public int QuestionId
		{
			get
			{
				return this._QuestionId;
			}
			set
			{
				if ((this._QuestionId != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIdChanging(value);
					this.SendPropertyChanging();
					this._QuestionId = value;
					this.SendPropertyChanged("QuestionId");
					this.OnQuestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingId", DbType="Int NOT NULL")]
		public int RatingId
		{
			get
			{
				return this._RatingId;
			}
			set
			{
				if ((this._RatingId != value))
				{
					if (this._Rating.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingIdChanging(value);
					this.SendPropertyChanging();
					this._RatingId = value;
					this.SendPropertyChanged("RatingId");
					this.OnRatingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_DetailSurvey", Storage="_Survey", ThisKey="SurveyId", OtherKey="SurveyId", IsForeignKey=true)]
		public Survey Survey
		{
			get
			{
				return this._Survey.Entity;
			}
			set
			{
				Survey previousValue = this._Survey.Entity;
				if (((previousValue != value) 
							|| (this._Survey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Survey.Entity = null;
						previousValue.DetailSurveys.Remove(this);
					}
					this._Survey.Entity = value;
					if ((value != null))
					{
						value.DetailSurveys.Add(this);
						this._SurveyId = value.SurveyId;
					}
					else
					{
						this._SurveyId = default(int);
					}
					this.SendPropertyChanged("Survey");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_DetailSurvey", Storage="_Question", ThisKey="QuestionId", OtherKey="QuestionId", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.DetailSurveys.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.DetailSurveys.Add(this);
						this._QuestionId = value.QuestionId;
					}
					else
					{
						this._QuestionId = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_DetailSurvey", Storage="_Rating", ThisKey="RatingId", OtherKey="RatingId", IsForeignKey=true)]
		public Rating Rating
		{
			get
			{
				return this._Rating.Entity;
			}
			set
			{
				Rating previousValue = this._Rating.Entity;
				if (((previousValue != value) 
							|| (this._Rating.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rating.Entity = null;
						previousValue.DetailSurveys.Remove(this);
					}
					this._Rating.Entity = value;
					if ((value != null))
					{
						value.DetailSurveys.Add(this);
						this._RatingId = value.RatingId;
					}
					else
					{
						this._RatingId = default(int);
					}
					this.SendPropertyChanged("Rating");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Question")]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionId;
		
		private string _Question1;
		
		private EntitySet<DetailSurvey> _DetailSurveys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIdChanging(int value);
    partial void OnQuestionIdChanged();
    partial void OnQuestion1Changing(string value);
    partial void OnQuestion1Changed();
    #endregion
		
		public Question()
		{
			this._DetailSurveys = new EntitySet<DetailSurvey>(new Action<DetailSurvey>(this.attach_DetailSurveys), new Action<DetailSurvey>(this.detach_DetailSurveys));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuestionId
		{
			get
			{
				return this._QuestionId;
			}
			set
			{
				if ((this._QuestionId != value))
				{
					this.OnQuestionIdChanging(value);
					this.SendPropertyChanging();
					this._QuestionId = value;
					this.SendPropertyChanged("QuestionId");
					this.OnQuestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Question", Storage="_Question1", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Question1
		{
			get
			{
				return this._Question1;
			}
			set
			{
				if ((this._Question1 != value))
				{
					this.OnQuestion1Changing(value);
					this.SendPropertyChanging();
					this._Question1 = value;
					this.SendPropertyChanged("Question1");
					this.OnQuestion1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_DetailSurvey", Storage="_DetailSurveys", ThisKey="QuestionId", OtherKey="QuestionId")]
		public EntitySet<DetailSurvey> DetailSurveys
		{
			get
			{
				return this._DetailSurveys;
			}
			set
			{
				this._DetailSurveys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailSurveys(DetailSurvey entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_DetailSurveys(DetailSurvey entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rating")]
	public partial class Rating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingId;
		
		private string _Value;
		
		private EntitySet<DetailSurvey> _DetailSurveys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingIdChanging(int value);
    partial void OnRatingIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Rating()
		{
			this._DetailSurveys = new EntitySet<DetailSurvey>(new Action<DetailSurvey>(this.attach_DetailSurveys), new Action<DetailSurvey>(this.detach_DetailSurveys));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingId
		{
			get
			{
				return this._RatingId;
			}
			set
			{
				if ((this._RatingId != value))
				{
					this.OnRatingIdChanging(value);
					this.SendPropertyChanging();
					this._RatingId = value;
					this.SendPropertyChanged("RatingId");
					this.OnRatingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_DetailSurvey", Storage="_DetailSurveys", ThisKey="RatingId", OtherKey="RatingId")]
		public EntitySet<DetailSurvey> DetailSurveys
		{
			get
			{
				return this._DetailSurveys;
			}
			set
			{
				this._DetailSurveys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailSurveys(DetailSurvey entity)
		{
			this.SendPropertyChanging();
			entity.Rating = this;
		}
		
		private void detach_DetailSurveys(DetailSurvey entity)
		{
			this.SendPropertyChanging();
			entity.Rating = null;
		}
	}
	
	public partial class getDataResult
	{
		
		private string _Question;
		
		private string _Value;
		
		private System.Nullable<int> _TotalSurvey;
		
		private string _Gender;
		
		private System.Nullable<int> _TotalGender;
		
		private string _AgeRange;
		
		private System.Nullable<int> _TotalAgeRange;
		
		private string _CabinType;
		
		private System.Nullable<int> _TotalCabinType;
		
		private string _AirportCode;
		
		private System.Nullable<int> _TotalAirport;
		
		public getDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this._Question = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSurvey", DbType="Int")]
		public System.Nullable<int> TotalSurvey
		{
			get
			{
				return this._TotalSurvey;
			}
			set
			{
				if ((this._TotalSurvey != value))
				{
					this._TotalSurvey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalGender", DbType="Int")]
		public System.Nullable<int> TotalGender
		{
			get
			{
				return this._TotalGender;
			}
			set
			{
				if ((this._TotalGender != value))
				{
					this._TotalGender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeRange", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string AgeRange
		{
			get
			{
				return this._AgeRange;
			}
			set
			{
				if ((this._AgeRange != value))
				{
					this._AgeRange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAgeRange", DbType="Int")]
		public System.Nullable<int> TotalAgeRange
		{
			get
			{
				return this._TotalAgeRange;
			}
			set
			{
				if ((this._TotalAgeRange != value))
				{
					this._TotalAgeRange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinType", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string CabinType
		{
			get
			{
				return this._CabinType;
			}
			set
			{
				if ((this._CabinType != value))
				{
					this._CabinType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCabinType", DbType="Int")]
		public System.Nullable<int> TotalCabinType
		{
			get
			{
				return this._TotalCabinType;
			}
			set
			{
				if ((this._TotalCabinType != value))
				{
					this._TotalCabinType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirportCode", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string AirportCode
		{
			get
			{
				return this._AirportCode;
			}
			set
			{
				if ((this._AirportCode != value))
				{
					this._AirportCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAirport", DbType="Int")]
		public System.Nullable<int> TotalAirport
		{
			get
			{
				return this._TotalAirport;
			}
			set
			{
				if ((this._TotalAirport != value))
				{
					this._TotalAirport = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
